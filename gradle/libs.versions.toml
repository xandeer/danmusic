[versions]
androidx-activity = "1.5.1"
androidx-lifecycle = "2.4.1"
androidx-test = "1.5.0"
coil = "2.2.2"
compose = "1.3.1"
compose-bom = "2022.10.00"
composeCompiler = "1.3.2"
coroutines = "1.6.4"
gradlePluginKotlin = "1.7.20"
koin = "3.2.2"
koin-android = "3.3.0"
koin-compose = "3.3.0"
ksp = "1.7.20-1.0.7"
ktlint = "0.47.1"
leak-canary = "2.10"
media3 = "1.0.0-beta03"
paging = "3.1.1"
paging-compose = "1.0.0-alpha17"
retrofit = "2.9.0"
room = "2.4.3"
okhttp = "4.10.0"
okio = "3.2.0"

[plugins]
binaryCompatibility = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version = "0.12.1" }
#dokka = { id = "org.jetbrains.dokka", version = "1.7.20" }
ktlint = { id = "org.jmailen.kotlinter", version = "3.12.0" }

[libraries]
gradlePlugin-android = "com.android.tools.build:gradle:7.3.1"
gradlePlugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "gradlePluginKotlin" }
#gradlePlugin-mavenPublish = "com.vanniktech:gradle-maven-publish-plugin:0.22.0"

accompanist-drawablepainter = { module = "com.google.accompanist:accompanist-drawablepainter", version = "0.27.1" }

androidx-activity = { module = "androidx.activity:activity-ktx", version.ref = "androidx-activity" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-appcompat-resources = "androidx.appcompat:appcompat-resources:1.4.2"
androidx-annotation = "androidx.annotation:annotation:1.5.0"
androidx-collection = "androidx.collection:collection:1.2.0"
androidx-core = "androidx.core:core-ktx:1.8.0"
androidx-exifinterface = "androidx.exifinterface:exifinterface:1.3.5"
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-test-core = { module = "androidx.test:core-ktx", version.ref = "androidx-test" }
androidx-test-junit = "androidx.test.ext:junit-ktx:1.1.4"
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidx-test" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidx-test" }
androidx-vectordrawable-animated = "androidx.vectordrawable:vectordrawable-animated:1.1.0"

assertj = { module = "org.assertj:assertj-core", version = "3.13.2" }

coil = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
compose-foundation = { module = "androidx.compose.foundation:foundation" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-material = { module = "androidx.compose.material:material" }
compose-material3 = { module = "androidx.compose.material3:material3" }
compose-ui-test = { module = "androidx.compose.ui:ui-test-junit4" }

coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

junit = "junit:junit:4.13.2"

koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin-android" }
koin-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin-compose" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koin-test-junit = { module = "io.insert-koin:koin-test-junit4", version.ref = "koin" }

kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test-junit" }

ksp = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }

ktlint = { module = "com.pinterest.ktlint:ktlint-core", version.ref = "ktlint" }

leakCanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leak-canary" }

media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3" }
media3-ui = { module = "androidx.media3:media3-ui", version.ref = "media3" }

okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }

okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
okio-fakefilesystem = { module = "com.squareup.okio:okio-fakefilesystem", version.ref = "okio" }

paging = { module = "androidx.paging:paging-runtime", version.ref = "paging" }
paging-compose = { module = "androidx.paging:paging-compose", version.ref = "paging-compose" }

retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }

robolectric = "org.robolectric:robolectric:4.9"

room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-paging = { module = "androidx.room:room-paging", version.ref = "room" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }

svg = "com.caverock:androidsvg-aar:1.4"

timber = { module = "com.jakewharton.timber:timber", version = "5.0.1" }

[bundles]
compose = [
  "androidx-activity-compose",
  "androidx-lifecycle-viewmodel-compose",
  "compose-foundation",
  "compose-material3",
  "compose-ui-tooling",
  "compose-preview",
  "koin-compose"
]
test-jvm = [
  "assertj",
  "coroutines-test",
  "junit",
  "koin-test",
  "koin-test-junit",
  "kotlin-test",
  "okhttp-mockwebserver",
  "okio-fakefilesystem",
  #  "robolectric"
]
test-android = [
  "androidx-test-core",
  "androidx-test-junit",
  "androidx-test-rules",
  "androidx-test-runner",
  "assertj",
  "coroutines-test",
  "junit",
  "koin-android",
  "koin-test",
  "koin-test-junit",
  "kotlin-test",
  "okhttp-mockwebserver"
]
